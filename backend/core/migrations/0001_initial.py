# Generated by Django 5.2 on 2025-04-27 18:54

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField()),
                ('predicted_start', models.DateField()),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('actual_start', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('last_ovulation', models.DateField(blank=True, null=True)),
                ('cycle_type', models.CharField(choices=[('regular', 'Regular'), ('irregular', 'Irregular'), ('unknown', 'Unknown')], max_length=10)),
                ('cycle_length', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('period_length', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('preferences', models.JSONField(blank=True, default=list)),
                ('profile_image', models.ImageField(default='profile_images/default.png', upload_to='profile_images/')),
                ('medical_conditions', models.ManyToManyField(blank=True, to='core.condition')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('predicted_next_start', models.DateField(blank=True, null=True)),
                ('cycle_length', models.PositiveIntegerField(editable=False)),
                ('average_symptoms', models.JSONField(blank=True, default=dict)),
                ('phase', models.CharField(choices=[('menstrual', 'Menstrual'), ('follicular', 'Follicular'), ('ovulation', 'Ovulation'), ('luteal', 'Luteal')], default='menstrual', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('needs_review', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['user', 'start_date'], name='core_cycle_user_id_3d178b_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('cramps', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('bloating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('tender_breasts', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('headache', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('acne', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('mood', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('stress', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('energy', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('cervical_mucus', models.CharField(choices=[('none', 'None'), ('sticky', 'Sticky'), ('watery', 'Watery'), ('egg-white', 'Egg-White'), ('creamy', 'Creamy'), ('atypical', 'Atypical')], default='none', max_length=20)),
                ('sleep_quality', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('libido', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_entries', to='core.profile')),
            ],
            options={
                'verbose_name_plural': 'Daily Entries',
                'ordering': ['date'],
                'unique_together': {('profile', 'date')},
            },
        ),
    ]
